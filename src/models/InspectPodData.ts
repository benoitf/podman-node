/**
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v4.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v4.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v4.0.0/libpod/images/json' | jq
 *
 * OpenAPI spec version: 4.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { InspectBlkioThrottleDevice } from './InspectBlkioThrottleDevice';
import type { InspectDevice } from './InspectDevice';
import type { InspectMount } from './InspectMount';
import type { InspectPodContainerInfo } from './InspectPodContainerInfo';
import type { InspectPodInfraConfig } from './InspectPodInfraConfig';

/**
* InspectPodData contains detailed information on a pod's configuration and state. It is used as the output of Inspect on pods.
*/
export class InspectPodData {
    /**
    * CgroupParent is the parent of the pod's Cgroup.
    */
    'cgroupParent'?: string;
    /**
    * CgroupPath is the path to the pod's Cgroup.
    */
    'cgroupPath'?: string;
    /**
    * Containers gives a brief summary of all containers in the pod and their current status.
    */
    'containers'?: Array<InspectPodContainerInfo>;
    /**
    * CreateCgroup is whether this pod will create its own Cgroup to group containers under.
    */
    'createCgroup'?: boolean;
    /**
    * CreateCommand is the full command plus arguments of the process the container has been created with.
    */
    'createCommand'?: Array<string>;
    /**
    * CreateInfra is whether this pod will create an infra container to share namespaces.
    */
    'createInfra'?: boolean;
    /**
    * Created is the time when the pod was created.
    */
    'created'?: Date;
    /**
    * Hostname is the hostname that the pod will set.
    */
    'hostname'?: string;
    /**
    * ID is the ID of the pod.
    */
    'id'?: string;
    'infraConfig'?: InspectPodInfraConfig;
    /**
    * InfraContainerID is the ID of the pod's infra container, if one is present.
    */
    'infraContainerID'?: string;
    /**
    * Labels is a set of key-value labels that have been applied to the pod.
    */
    'labels'?: { [key: string]: string; };
    /**
    * Name is the name of the pod.
    */
    'name'?: string;
    /**
    * Namespace is the Libpod namespace the pod is placed in.
    */
    'namespace'?: string;
    /**
    * NumContainers is the number of containers in the pod, including the infra container.
    */
    'numContainers'?: number;
    /**
    * SharedNamespaces contains a list of namespaces that will be shared by containers within the pod. Can only be set if CreateInfra is true.
    */
    'sharedNamespaces'?: Array<string>;
    /**
    * State represents the current state of the pod.
    */
    'state'?: string;
    /**
    * CPUPeriod contains the CPU period of the pod
    */
    'cpuPeriod'?: number;
    /**
    * CPUQuota contains the CPU quota of the pod
    */
    'cpuQuota'?: number;
    /**
    * CPUSetCPUs contains linux specific CPU data for the pod
    */
    'cpusetCpus'?: string;
    /**
    * BlkioDeviceReadBps contains the Read/Access limit for the pod's devices
    */
    'deviceReadBps'?: Array<InspectBlkioThrottleDevice>;
    /**
    * Devices contains the specified host devices
    */
    'devices'?: Array<InspectDevice>;
    /**
    * Mounts contains volume related information for the pod
    */
    'mounts'?: Array<InspectMount>;
    /**
    * SecurityOpt contains the specified security labels and related SELinux information
    */
    'securityOpt'?: Array<string>;
    /**
    * VolumesFrom contains the containers that the pod inherits mounts from
    */
    'volumesFrom'?: Array<string>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            'name': 'cgroupParent',
            'baseName': 'CgroupParent',
            'type': 'string',
            'format': '',
        },
        {
            'name': 'cgroupPath',
            'baseName': 'CgroupPath',
            'type': 'string',
            'format': '',
        },
        {
            'name': 'containers',
            'baseName': 'Containers',
            'type': 'Array<InspectPodContainerInfo>',
            'format': '',
        },
        {
            'name': 'createCgroup',
            'baseName': 'CreateCgroup',
            'type': 'boolean',
            'format': '',
        },
        {
            'name': 'createCommand',
            'baseName': 'CreateCommand',
            'type': 'Array<string>',
            'format': '',
        },
        {
            'name': 'createInfra',
            'baseName': 'CreateInfra',
            'type': 'boolean',
            'format': '',
        },
        {
            'name': 'created',
            'baseName': 'Created',
            'type': 'Date',
            'format': 'date-time',
        },
        {
            'name': 'hostname',
            'baseName': 'Hostname',
            'type': 'string',
            'format': '',
        },
        {
            'name': 'id',
            'baseName': 'Id',
            'type': 'string',
            'format': '',
        },
        {
            'name': 'infraConfig',
            'baseName': 'InfraConfig',
            'type': 'InspectPodInfraConfig',
            'format': '',
        },
        {
            'name': 'infraContainerID',
            'baseName': 'InfraContainerID',
            'type': 'string',
            'format': '',
        },
        {
            'name': 'labels',
            'baseName': 'Labels',
            'type': '{ [key: string]: string; }',
            'format': '',
        },
        {
            'name': 'name',
            'baseName': 'Name',
            'type': 'string',
            'format': '',
        },
        {
            'name': 'namespace',
            'baseName': 'Namespace',
            'type': 'string',
            'format': '',
        },
        {
            'name': 'numContainers',
            'baseName': 'NumContainers',
            'type': 'number',
            'format': 'uint64',
        },
        {
            'name': 'sharedNamespaces',
            'baseName': 'SharedNamespaces',
            'type': 'Array<string>',
            'format': '',
        },
        {
            'name': 'state',
            'baseName': 'State',
            'type': 'string',
            'format': '',
        },
        {
            'name': 'cpuPeriod',
            'baseName': 'cpu_period',
            'type': 'number',
            'format': 'uint64',
        },
        {
            'name': 'cpuQuota',
            'baseName': 'cpu_quota',
            'type': 'number',
            'format': 'int64',
        },
        {
            'name': 'cpusetCpus',
            'baseName': 'cpuset_cpus',
            'type': 'string',
            'format': '',
        },
        {
            'name': 'deviceReadBps',
            'baseName': 'device_read_bps',
            'type': 'Array<InspectBlkioThrottleDevice>',
            'format': '',
        },
        {
            'name': 'devices',
            'baseName': 'devices',
            'type': 'Array<InspectDevice>',
            'format': '',
        },
        {
            'name': 'mounts',
            'baseName': 'mounts',
            'type': 'Array<InspectMount>',
            'format': '',
        },
        {
            'name': 'securityOpt',
            'baseName': 'security_opt',
            'type': 'Array<string>',
            'format': '',
        },
        {
            'name': 'volumesFrom',
            'baseName': 'volumes_from',
            'type': 'Array<string>',
            'format': '',
        }    ];

    static getAttributeTypeMap() {
        return InspectPodData.attributeTypeMap;
    }

    public constructor() {
    }
}

